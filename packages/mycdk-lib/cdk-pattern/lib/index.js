"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCurrentAccount = exports.getGithubConnections = void 0;
const client_codestar_connections_1 = require("@aws-sdk/client-codestar-connections");
const client_sts_1 = require("@aws-sdk/client-sts");
async function getGithubConnections(region) {
    const client = new client_codestar_connections_1.CodeStarConnections({ region: region });
    const connections = await client.listConnections({ ProviderTypeFilter: client_codestar_connections_1.ProviderType.GITHUB });
    const output = [];
    for (const connection of connections.Connections || []) {
        // output.push({ connectionArn: connection.ConnectionArn!, connectionName: connection.ConnectionName! });
        output.push(connection.ConnectionName);
    }
    return "hello";
}
exports.getGithubConnections = getGithubConnections;
/**
 * Gets the current account.
 */
async function getCurrentAccount() {
    const client = new client_sts_1.STS({ region: 'us-east-1' });
    const response = await client.getCallerIdentity({});
    return response.Account;
}
exports.getCurrentAccount = getCurrentAccount;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxzRkFBeUY7QUFDekYsb0RBQTBDO0FBV25DLEtBQUssVUFBVSxvQkFBb0IsQ0FBQyxNQUFjO0lBQ3JELE1BQU0sTUFBTSxHQUFHLElBQUksaURBQW1CLENBQUMsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQztJQUMzRCxNQUFNLFdBQVcsR0FBRyxNQUFNLE1BQU0sQ0FBQyxlQUFlLENBQUMsRUFBRSxrQkFBa0IsRUFBRSwwQ0FBWSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUM7SUFDOUYsTUFBTSxNQUFNLEdBQWEsRUFBRSxDQUFDO0lBQzVCLEtBQUssTUFBTSxVQUFVLElBQUksV0FBVyxDQUFDLFdBQVcsSUFBSSxFQUFFLEVBQUU7UUFDcEQseUdBQXlHO1FBQ3pHLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLGNBQWUsQ0FBQyxDQUFDO0tBQzNDO0lBQ0QsT0FBTyxPQUFPLENBQUM7QUFDbkIsQ0FBQztBQVRELG9EQVNDO0FBRUQ7O0dBRUc7QUFDSSxLQUFLLFVBQVUsaUJBQWlCO0lBQ25DLE1BQU0sTUFBTSxHQUFHLElBQUksZ0JBQUcsQ0FBQyxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsQ0FBQyxDQUFDO0lBQ2hELE1BQU0sUUFBUSxHQUFHLE1BQU0sTUFBTSxDQUFDLGlCQUFpQixDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ3BELE9BQU8sUUFBUSxDQUFDLE9BQVEsQ0FBQztBQUM3QixDQUFDO0FBSkQsOENBSUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb2RlU3RhckNvbm5lY3Rpb25zLCBQcm92aWRlclR5cGUgfSBmcm9tICdAYXdzLXNkay9jbGllbnQtY29kZXN0YXItY29ubmVjdGlvbnMnO1xuaW1wb3J0IHsgU1RTIH0gZnJvbSAnQGF3cy1zZGsvY2xpZW50LXN0cyc7XG5cbi8qKlxuICogR2V0cyBhbGwgR2l0SHViIGNvbm5lY3Rpb25zIGF2YWlsYWJsZSBpbiB0aGUgZ2l2ZW4gcmVnaW9uLlxuICpcbiAqIEBwYXJhbSByZWdpb24gVGhlIHJlZ2lvbiB0byBjaGVjayBmb3IgR2l0SHViIGNvbm5lY3Rpb25zLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIEdpdGh1YkNvbm5lY3Rpb24ge1xuICAgIC8vIHJlYWRvbmx5IGNvbm5lY3Rpb25Bcm46IHN0cmluZztcbiAgICByZWFkb25seSBjb25uZWN0aW9uTmFtZTogc3RyaW5nO1xufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEdpdGh1YkNvbm5lY3Rpb25zKHJlZ2lvbjogc3RyaW5nKTogUHJvbWlzZTxzdHJpbmc+e1xuICAgIGNvbnN0IGNsaWVudCA9IG5ldyBDb2RlU3RhckNvbm5lY3Rpb25zKHsgcmVnaW9uOiByZWdpb24gfSk7XG4gICAgY29uc3QgY29ubmVjdGlvbnMgPSBhd2FpdCBjbGllbnQubGlzdENvbm5lY3Rpb25zKHsgUHJvdmlkZXJUeXBlRmlsdGVyOiBQcm92aWRlclR5cGUuR0lUSFVCIH0pO1xuICAgIGNvbnN0IG91dHB1dDogc3RyaW5nW10gPSBbXTtcbiAgICBmb3IgKGNvbnN0IGNvbm5lY3Rpb24gb2YgY29ubmVjdGlvbnMuQ29ubmVjdGlvbnMgfHwgW10pIHtcbiAgICAgICAgLy8gb3V0cHV0LnB1c2goeyBjb25uZWN0aW9uQXJuOiBjb25uZWN0aW9uLkNvbm5lY3Rpb25Bcm4hLCBjb25uZWN0aW9uTmFtZTogY29ubmVjdGlvbi5Db25uZWN0aW9uTmFtZSEgfSk7XG4gICAgICAgIG91dHB1dC5wdXNoKGNvbm5lY3Rpb24uQ29ubmVjdGlvbk5hbWUhKTtcbiAgICB9XG4gICAgcmV0dXJuIFwiaGVsbG9cIjtcbn1cblxuLyoqXG4gKiBHZXRzIHRoZSBjdXJyZW50IGFjY291bnQuXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRDdXJyZW50QWNjb3VudCgpOiBQcm9taXNlPHN0cmluZz4ge1xuICAgIGNvbnN0IGNsaWVudCA9IG5ldyBTVFMoeyByZWdpb246ICd1cy1lYXN0LTEnIH0pO1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgY2xpZW50LmdldENhbGxlcklkZW50aXR5KHt9KTtcbiAgICByZXR1cm4gcmVzcG9uc2UuQWNjb3VudCE7XG59XG4iXX0=